% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/deeptransformation.R
\name{deeptransformation_init}
\alias{deeptransformation_init}
\title{Initializing Deep Transformation Models}
\usage{
deeptransformation_init(
  n_obs,
  ncol_structured,
  ncol_deep,
  list_structured,
  list_deep,
  lambda_lasso = NULL,
  lambda_ridge = NULL,
  weights = NULL,
  learning_rate = 0.01,
  optimizer = optimizer_adam(lr = learning_rate),
  monitor_metric = list(),
  orthog_fun = orthog,
  orthogX = NULL,
  split_fun = split_model,
  order_bsp,
  use_bias_in_structured = FALSE,
  train_together = NULL,
  split_between_shift_and_theta = NULL,
  interact_pred_trafo = NULL,
  addconst_interaction = NULL,
  penalize_bsp = 0,
  order_bsp_penalty = 2,
  base_distribution = "normal",
  batch_shape = NULL,
  atm_lags = 0,
  atm_toplayer = NULL
)
}
\arguments{
\item{n_obs}{number of observations}

\item{ncol_structured}{a vector of length #parameters
defining the number of variables used for each of the parameters.
If any of the parameters is not modelled using a structured part
the corresponding entry must be zero.}

\item{ncol_deep}{a vector of length #parameters
defining the number of variables used for each of the parameters.
If any of the parameters is not modelled using a deep part
the corresponding entry must be zero. If all parameters
are estimated by the same deep model, the first entry must be
non-zero while the others must be zero.}

\item{list_structured}{list of (non-linear) structured layers
(list length between 0 and number of parameters)}

\item{list_deep}{list of deep models to be used
(list length between 0 and number of parameters)}

\item{lambda_lasso}{penalty parameter for l1 penalty of structured layers}

\item{lambda_ridge}{penalty parameter for l2 penalty of structured layers}

\item{weights}{observation weights used in the likelihood}

\item{learning_rate}{learning rate for optimizer}

\item{optimizer}{optimizer used (defaults to adam)}

\item{monitor_metric}{see \code{?deepregression}}

\item{orthog_fun}{function defining the orthogonalization}

\item{orthogX}{vector of columns defining the orthgonalization layer}

\item{split_fun}{see \code{?deepregression}}

\item{order_bsp}{NULL or integer; order of Bernstein polynomials; if not NULL,
a conditional transformation model (CTM) is fitted.}

\item{use_bias_in_structured}{whether or not to use a bias in structured
layers}

\item{train_together}{see \code{?deepregression}}

\item{split_between_shift_and_theta}{see \code{?deepregression}}

\item{interact_pred_trafo}{specifies a transformation function applied
to the interaction predictor using a layer lambda (e.g. to ensure positivity)}

\item{addconst_interaction}{additive constant added to predictor matrix to
ensure positivity}

\item{penalize_bsp}{scalar value > 0; amount of penalization of Bernstein polynomials}

\item{order_bsp_penalty}{integer; order of Bernstein polynomial penalty. 0 results in a
penalty based on integrated squared second order derivatives, values >= 1 in difference
penalties}

\item{base_distribution}{a string ("normal", "logistic") or TFP distribution; 
the base distribution for the transformation model. 
Per default \code{tfd_normal(loc = 0, scale = 1)} but any other distribution is possible (e.g.,
\code{tfd_logistic(loc = 0, scale = 1)}).}
}
\description{
Initializing Deep Transformation Models
}
